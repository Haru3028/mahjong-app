generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model History {
  id        Int      @id @default(autoincrement())
  userId    String?
  type      String?
  result    Json?
  hand_data Json?
  problem   Json?
  createdAt DateTime @default(now())
}

model Problem {
  id          Int      @id @default(autoincrement())
  hand        Json
  situation   String?
  answer      Json
  explanation String?
  furo        Json?
  dora        Json?
  han         Int?
  fu          Int?
  tsumo       Boolean?
  level       String?
  created_at  DateTime @default(now())
}

model Quiz {
  id          Int      @id @default(autoincrement())
  question    String
  choices     String
  answer      Int
  explanation String?
  chapter     String?
  createdAt   DateTime @default(now())
}

model Practice {
  id        Int      @id @default(autoincrement())
  tiles     String
  answer    String
  createdAt DateTime @default(now())
}

model User {
  id              Int               @id @default(autoincrement())
  username        String            @unique
  passwordHash    String
  displayName     String?
  email           String?           @unique
  createdAt       DateTime          @default(now())
  inputHistory    InputHistory[]
  practiceHistory PracticeHistory[]
}

model InputHistory {
  id         Int      @id @default(autoincrement())
  userId     Int?
  inputType  String
  inputValue String
  createdAt  DateTime @default(now())
  user       User?    @relation(fields: [userId], references: [id])
}

model PracticeHistory {
  id         Int      @id @default(autoincrement())
  userId     Int?
  problemId  Int?
  inputValue String
  correct    Boolean
  score      Int?
  han        Int?
  fu         Int?
  createdAt  DateTime @default(now())
  user       User?    @relation(fields: [userId], references: [id])
}
